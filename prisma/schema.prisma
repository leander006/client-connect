generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String?  @unique
  image     String?  @default("https://res.cloudinary.com/dj-sanghvi-college/image/upload/v1697996657/noProfile_jjyqlm.jpg")
  password  String?
  createdAt DateTime @default(now())

  conversations UserConversationRelation[]

  messages Message[]
}

model Conversation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name      String?

  messagesIds String[]
  messages    Message[]

  users UserConversationRelation[]
}

model UserConversationRelation {
  user           User         @relation(fields: [userId], references: [id])
  userId         Int // relation scalar field (used in the `@relation` attribute above)
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt     DateTime     @default(now())

  @@id([userId, conversationId])
}

model Message {
  id        Int      @id @default(autoincrement())
  body      String?
  image     String?
  createdAt DateTime @default(now())

  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  senderId Int
  sender   User @relation(fields: [senderId], references: [id], onDelete: Cascade)
}
